(function(){"use strict";angular.module("tubular.directives").directive("tbForm",["tubularHttp",function(n){return{template:"<form ng-transclude><\/form>",restrict:"E",replace:!0,transclude:!0,scope:{rowModel:"=?",serverUrl:"@",serverSaveUrl:"@",isNew:"@"},controller:["$scope","$routeParams","$location","tubularModel",function(t,i,r,u){t.tubularDirective="tubular-form";t.fields=[];t.hasFieldsDefinitions=!1;t.modelKey=i.param;t.addField=function(n){if(n.name!==null){if(t.hasFieldsDefinitions!==!1)throw"Cannot define more fields. Field definitions have been sealed";n.Name=n.name;t.fields.push(n)}};t.$watch("hasFieldsDefinitions",function(n){n===!0&&t.retrieveData()});t.bindFields=function(){angular.forEach(t.fields,function(n){(n.$parent.Model=t.rowModel,n.$editorType=="input"&&angular.equals(n.value,t.rowModel[n.Name])==!1&&(n.value=t.rowModel[n.Name],t.$watch(function(){return n.value},function(i){t.rowModel[n.Name]=i})),angular.isUndefined(t.rowModel.$state))||angular.equals(n.state,t.rowModel.$state[n.Name])==!1&&(n.state=t.rowModel.$state[n.Name])})};t.retrieveData=function(){if(angular.isUndefined(t.serverUrl)){angular.isUndefined(t.rowModel)&&(t.rowModel=new u(t,{}));t.bindFields();return}n.get(t.serverUrl+t.modelKey).promise.then(function(n){t.rowModel=new u(t,n);t.bindFields()},function(n){t.$emit("tbGrid_OnConnectionError",n)})};t.updateRow=function(i){var r={serverUrl:t.serverSaveUrl,requestMethod:"PUT"};t.currentRequest=n.saveDataAsync(i,r);t.currentRequest.promise.then(function(n){t.$emit("tbGrid_OnSuccessfulUpdate",n);t.$emit("tGrid_OnSuccessfulForm",n)},function(n){t.$emit("tbGrid_OnConnectionError",n)}).then(function(){t.currentRequest=null})};t.create=function(){t.currentRequest=n.post(t.serverSaveUrl,t.rowModel).promise.then(function(n){t.$emit("tbGrid_OnSuccessfulUpdate",n);t.$emit("tGrid_OnSuccessfulForm",n)},function(n){t.$emit("tbGrid_OnConnectionError",n)}).then(function(){t.currentRequest=null})};t.save=function(){t.rowModel.save()===!1&&t.$emit("tbGrid_OnSavingNoChanges",t.rowModel)};t.gotoView=function(n){r.path(n)}}],compile:function(){return{pre:function(){},post:function(n){n.hasFieldsDefinitions=!0}}}}}])})();
//# sourceMappingURL=tubular-directives-forms.min.js.map
